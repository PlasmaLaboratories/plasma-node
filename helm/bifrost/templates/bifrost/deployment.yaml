apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-deployment
  labels:
    app: {{ .Values.bifrost.name }}
spec:
  serviceName: {{ .Values.bifrost.name }}-service
  replicas: {{ .Values.bifrost.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.bifrost.name }}
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Values.bifrost.name }}
    spec:
      automountServiceAccountToken: false
      securityContext:
        runAsUser: 1001 # TODO: Update Bifrost Docker container to use high UID. Add CKV_K8S_40 as a check.
        runAsGroup: 0
        fsGroup: 0
        seccompProfile:
            type: RuntimeDefault
      containers:
      - name: {{ .Values.bifrost.name }}
        image: {{ .Values.bifrost.image }}
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
        command:
          {{ range .Values.bifrost.command }}
            - {{ . }}
          {{ end }}
        args:
          {{ range .Values.bifrost.args }}
            - {{ . }}
          {{ end }}
        {{- if or (.Values.bifrost.resources.minCPU) (.Values.bifrost.resources.minMemory) (.Values.bifrost.resources.maxCPU) (.Values.bifrost.resources.maxMemory) }}
        resources:
          {{- if or (.Values.bifrost.resources.minCPU) (.Values.bifrost.resources.minMemory) }}
          requests:
            {{- if .Values.bifrost.resources.minMemory }}
            memory: {{ .Values.bifrost.resources.minMemory }}
            {{- end }}
            {{- if .Values.bifrost.resources.minCPU }}
            cpu: {{ .Values.bifrost.resources.minCPU }}
            {{- end }}
          {{- end }}
          {{- if or (.Values.bifrost.resources.maxCPU) (.Values.bifrost.resources.maxMemory) }}
          limits:
            {{- if .Values.bifrost.resources.maxMemory }}
            memory: {{ .Values.bifrost.resources.maxMemory }}
            {{- end }}
            {{- if .Values.bifrost.resources.maxCPU }}
            cpu: {{ .Values.bifrost.resources.maxCPU }}
            {{- end }}
          {{- end }}
        {{- end}}
        {{- if (.Values.bifrost.readinessProbe.enabled) }}
        readinessProbe:
          httpGet:
            port: {{ .Values.bifrost.ports.rpc }}
            initialDelaySeconds: {{ .Values.bifrost.readinessProbe.initialDelaySeconds }}
        {{- end }}
        {{- if .Values.bifrost.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            port: {{ .Values.bifrost.ports.rpc }}
            initialDelaySeconds: {{ .Values.bifrost.livenessProbe.initialDelaySeconds }}
        {{- end }}
        ports:
        - containerPort: {{ .Values.bifrost.ports.p2p }}
        - containerPort: {{ .Values.bifrost.ports.rpc }}
        volumeMounts:
        - name: {{ .Values.bifrost.name }}-pv
          mountPath: {{ .Values.bifrost.volume.mountDirectory }}
  volumeClaimTemplates:
  - metadata:
      name: {{ .Values.bifrost.name }}-pv
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.bifrost.volume.storageClass }}
      resources:
        requests:
          storage: {{ .Values.bifrost.volume.storageSize }}
