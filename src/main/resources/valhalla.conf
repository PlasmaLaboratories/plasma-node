bifrost {

  restApi {
    # Local network address to bind to
    bindAddress = "127.0.0.1:9585"

    # Hash of the API key string
    apiKeyHash = ""

    # Enable cors support
    corsAllowed = true

    # Time allowed to process a request
    timeout = 10s
  }

  network {

    #####################################################
    # Node information to be declared during handshake  #
    #####################################################

    # Node name to send during handshake
    nodeName = "valhalla"

    # Network version send in handshake
    appVersion = 1.0.0

    # Network address
    bindAddress = "0.0.0.0:9584"

    ########################
    # Connection settings  #
    ########################

    # Magic bytes, that will be added to every p2p message to allow
    # distinguish different networks (e.g. testnet/mainnet).
    magicBytes = [12, 34, 56, 78]

    # String with IP address and port to send as external address during handshake.
    # Could be set automatically if UPnP is enabled.
    #
    # If `declared-address` is set, which is the common scenario for nodes running in the cloud,
    # the node will just listen to incoming connections on `bindAddress:port` and
    # broadcast its `declaredAddress` to its peers.
    # UPnP is supposed to be disabled in this scenario.
    #
    # If declared address is not set and UPnP is not enabled, the node will not listen to incoming connections at all.
    #
    # If declared address is not set and UPnP is enabled, the node will attempt to connect to an IGD, retrieve its
    # external IP address and configure the gateway to allow traffic through. If the node succeeds, the IGD's external
    # IP address becomes the node's declared address.
    #
    # In some cases, you may both set `decalredAddress` and enable UPnP (e.g. when IGD can't reliably determine its
    # external IP address). In such cases the node will attempt to configure an IGD to pass traffic from external port
    # to `bind-address:port`. Please note, however, that this setup is not recommended.
    # declaredAddress = ""

    # Enable UPnP tunnel creation only if you router/gateway supports it. Useful if your node is runnin in home
    # network. Completely useless if you node is in cloud.
    upnpEnabled = false

    # Accept only local connections
    localOnly = false

    # UPnP timeouts
    # upnp-gateway-timeout = 7s
    # upnp-discover-timeout = 3s

    # Add delay for sending message
    # addedMaxDelay = 2000ms

    ##################
    # Peers settings #
    ##################

    # Network handshake timeout
    handshakeTimeout = 2000ms

    # List of IP addresses of well known nodes.
    knownPeers = [
      "165.227.159.180:9584"
    ]

    # Interval between GetPeers messages to be send by our node to a random one
    getPeersInterval = 2m

    # Number of network connections
    maxConnections = 10

    # Network connection timeout
    connectionTimeout = 1s

    ############################
    # Delivery settings limits #
    ############################

    # Network delivery timeout
    deliveryTimeout = 10s

    # Max number of delivery checks. Stop expecting modifier (and penalize peer) if it was not delivered on time
    maxDeliveryChecks = 40

    ############
    # Timeouts #
    ############

    # Interval between `SyncInfo` messages when our node is not synchronized yet
    syncInterval = 10s

    # Interval between `SyncInfo` messages when our node is already synchronized
    syncIntervalStable = 20s

    # Synchronization timeout
    syncTimeout = 5s

    # Synchronization status update interval
    syncStatusRefresh = 2m

    # Synchronization status update interval for stable regime
    syncStatusRefreshStable = 4m

    # Network controller timeout
    controllerTimeout = 5s

    ###############
    # Size limits #
    ###############

    # Maximum income package size
    maxPacketSize = 1048576

    # Maximum size of a handshaking message
    maxHandshakeSize = 8096

    # Accept maximum inv objects
    maxInvObjects = 512

    # Desired number of inv objects. Our requests will have this size.
    desiredInvObjects = 512

    # How many persistent modifiers to store in the cache.
    # The cache stores modifiers that are waiting to be applied.
    maxModifiersCacheSize = 1024

    # Maximum number of PeerSpec objects in one Peers message
    maxPeerSpecObjects = 64

    # Default ban duration, unless permanent penalty is applied
    temporalBanDuration = 60m

    # Misbehaving peer penalty score will not be increased withing this time interval,
    # unless permanent penalty is applied
    penaltySafeInterval = 5m

    # Max penalty score peer can accumulate before being banned
    penaltyScoreThreshold = 100
  }

  forgingSettings {
    # Difficulty the genesis block is created with
    InitialDifficulty = 15000000

    # Smallest difficulty threshold to increase the difficulty score by
    MinimumDifficulty = 100

    # Enable/disable forging on this node
    tryForging = false

    # Agreed upon block time target
    targetBlockTime = 15000

    # Delay between trying to forge the next block
    blockGenerationDelay = 2000

    # Major network version
    version = 1

    # Height of the last fork
    forkHeight = 0
  }

  walletSeed = "valhalla"
  keyFileDir = "keyfiles/valhalla"
  walletDir = ".bifrost/valhalla/wallet"
  dataDir = ".bifrost/valhalla/blockchain"
  pbrDir = ".bifrost/valhalla/pbr"
  tbrDir = ".bifrost/valhalla/tbr"
  logDir = ".bifrost/valhalla/log"
  # nodeKeys = ["6sYyiTguyQ455w2dGEaNbrwkAWAEYV1Zk6FtZMknWDKQ"]
  rpcPort = 9585
  verboseAPI = true
  version = "1.0.0"

  # ----- Cache settings (Guava) -----
  # Consider 5 sec per block for testing and 15 sec per block for toplnet
  # 15 sec * 50 blocks / 60 sec per minutes = 12.5 minutes
  # using milliseconds: 1,200,000 milliseconds == 20 minutes
  cacheExpire = 1200000
  cacheSize = 50000

  # Maximum number of versions to rollback for state
  maxRollbackDepth = 10
}
