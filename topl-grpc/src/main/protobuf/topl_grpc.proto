syntax = "proto3";

package co.topl.grpc.services;

import 'models/common.proto';
import 'models/block.proto';

service ToplGrpc {
  rpc BroadcastTransaction (BroadcastTransactionReq) returns (BroadcastTransactionRes);
  rpc CurrentMempool (CurrentMempoolReq) returns (CurrentMempoolRes);

  rpc FetchBlockHeader (FetchBlockHeaderReq) returns (FetchBlockHeaderRes);
  rpc FetchBlockBody (FetchBlockBodyReq) returns (FetchBlockBodyRes);

}

message BroadcastTransactionReq {
  // TODO: Use a Transaction structure instead of just its transmittableBytes
  // But for now, just encode/decode the byte representation.  Re-implementing the full
  // structure requires re-implementing the full Proposition/Proof structure.
  bytes transmittableBytes = 1;
}

message BroadcastTransactionRes {}

message CurrentMempoolReq {}

message CurrentMempoolRes {
  repeated co.topl.grpc.models.TransactionId transactionIds = 1;
}

message FetchBlockHeaderReq {
  co.topl.grpc.models.BlockId blockId = 1;
}

message FetchBlockHeaderRes {
  co.topl.grpc.models.BlockHeader header = 1;
}

message FetchBlockBodyReq {
  co.topl.grpc.models.BlockId blockId = 1;
}

message FetchBlockBodyRes {
  co.topl.grpc.models.BlockBody body = 1;
}
